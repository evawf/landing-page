/*
 *
 * CSS written based on SMACSS architecture.
 * To learn more, visit: http://smacss.com/
 * 
 * For simplicity, no reset or normalize is added. 
 * To learn more, visit: https://css-tricks.com/reboot-resets-reasoning/
 *
*/


/* ---- Base Rules ---- */
html {
    scroll-behavior: smooth;
}

body {
    background: #88cbab;
    background: linear-gradient(0deg, #88cbab 0%, #e8e9ec 100%);
    margin: 0;
    font-family: 'Merriweather', serif;
    color: #e66114;
}

/* Typeography General*/
h1 {
    font-family: 'Fira Sans', sans-serif;
    font-size: 3em;
    margin: 2em 1rem;
}

/* For scree size greater than 560px */
@media only screen and (min-width: 35em){
    h1 {
        font-size: 5em;
        margin: 2em 4rem 1em;
    }
}

h2 {
    border-bottom: 1px solid #30303e;
    font-family: 'Oxygen', Sans-Serif;
    font-size: 3em;
    color: #e66114;
}

p {
    line-height: 1.6em;
    color: black;
}

#top-btn a {
    height: 4em;
    width: 4em;
    border-radius: 1em;
    background-color: #8b1f1f;
    color: #fff;
    text-decoration: none;
    align-items: center;
    justify-content: center;
    display: flex;
    
}
/* ---- Layout Rules ---- */
.main-hero {
    min-height: 40vh;
    display: relative;
}

#cover #cover-photo {
    width: 100%;
    height: auto;
}

.cover-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.cover-text h2 {
    color: #e66114;
    text-shadow: 2px 2px #fff;
}

section {
    position: relative;
    min-height: 80vh;
}

/* ---- Module Rules ---- */

/* Navigation Styles*/
nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: #fff;
    font-size: 1rem;
    background-color: #30303e;
    padding: 0 30px;
    height: 3.5em;
}

#logo {
    text-decoration: none;
    color: #fff;
    font-size: 2.5em;
    margin-left: 1em;
    font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
}

.navbar__menu ul {
    flex-basis: 70%;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    list-style-type: none;
    text-decoration: none;
}

.navbar__menu li {
    color: #fff;
    margin: 0 2em;
}

.navbar__menu .nav-link {
    display: block;
    padding: 1em;
    font-weight: bold;
    color: #fff;
    text-decoration: none;
}

.navbar__menu .nav-link:hover {
    color: #e66114;
    transition: ease 0.3s all;
}

nav .active .nav-link {
    color: #e66114;
}

.menu-icon {
    display:none;
}

/* For screen size less than 600px*/
@media screen and (max-width: 35em) {
    .icon-line {
        display: block; 
    }

    #top-btn {
        display: none;
        position: fixed;
        top: 43em;
        right: 1em;
    }
}

/* Header Styles */
.page__header {
    background: rgb(5, 5, 5);
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 5;
}

/* Footer Styles */
.page__footer {
    background: #000;
    padding: 1em;
    color: #fff;
}

.page__footer p{
    color: #fff;
}

/* ---- Theme Rules ---- */
/* Landing Container Styles */
.landing__container {
    padding: 1em;
    text-align: left;
}

/* For screen size bigger than 560px */
@media only screen and (min-width: 35em) {
    .landing__container {
        max-width: 60em;
    }

    #top-btn {
        display: none;
        position: fixed;
        top: 43em;
        right: 1em;
    }
}

@media only screen and (min-width: 40em) {
    #top-btn {
        display: none;
        position: fixed;
        top: 43em;
        right: 1em;
    }
}

section:nth-of-type(even) .landing__container {
    margin-right: 0;
    margin-left: auto;
    text-align: right; 
}

.section-content {
    display: flex;
    justify-content: space-around;
    align-items: center;
    margin: 6em 0;
}

.section-text {
    margin: 0 1em;
}

.section-photo img {
    width: 24em;
    margin: 0 2em;
}

/* Background Circles */
/* Note that background circles are created with psuedo elements before and after */
/* Circles appear to be random do to use of :nth-of-type psuedo class */
section:nth-of-type(odd) .landing__container::before {
    content: '';
    background: #ffffff30;
    position: absolute;
    z-index: -5;
    width: 20vh;
    height: 20vh;
    border-radius: 50%;
    opacity: 0;
    transition: ease 0.5s all;
}

section:nth-of-type(even) .landing__container::before {
    content: '';
    background: rgb(255,255,255);
    background: linear-gradient(0deg, rgba(255,255,255,.1) 0%, rgba(255,255,255,.2) 100%);
    position: absolute;
    top: 3em;
    right: 3em;
    z-index: -5;
    width: 10vh;
    height: 10vh;
    border-radius: 50%;
    opacity: 0;
    transition: ease 0.5s all;
}

section:nth-of-type(3n) .landing__container::after {
    content: '';
    background: rgb(255,255,255);
    background: linear-gradient(0deg, rgba(255,255,255,.1) 0%, rgba(255,255,255,.2) 100%);
    position: absolute;
    right: 0;
    bottom: 0;
    z-index: -5;
    width: 10vh;
    height: 10vh;
    border-radius: 50%;
    opacity: 0;
    transition: ease 0.5s all;
}

section:nth-of-type(3n + 1) .landing__container::after {
    content: '';
    background: rgb(255,255,255);
    background: linear-gradient(0deg, rgba(255,255,255,.1) 0%, rgba(255,255,255,.2) 100%);
    position: absolute;
    right: 20vw;
    bottom: -5em;
    z-index: -5;
    width: 15vh;
    height: 15vh;
    border-radius: 50%;
    opacity: 0;
    transition: ease 0.5s all;
}


/* ---- Theme State Rules ---- */
/* Section Active Styles */
/* Note: your-active-class class is applied through javascript. You should update the class here and in the index.html to what you set in your javascript file.  */
section.active-section {
    background: rgb(0, 0, 0);
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.1) 0%, rgba(0, 0, 0, 0) 100%);
}

section.active-section .landing__container::before {
    opacity: 1;
    animation: rotate 4s linear 0s infinite forwards;
}

section.active-section .landing__container::after {
    opacity: 1;
    animation: rotate 5s linear 0s infinite forwards reverse;
}

/* Section Active Styles Keyframe Animations */
@keyframes rotate {
	from {
		transform: rotate(0deg)
		           translate(-1em)
		           rotate(0deg);
	}
	to {
		transform: rotate(360deg)
		           translate(-1em) 
		           rotate(-360deg);
	}
}